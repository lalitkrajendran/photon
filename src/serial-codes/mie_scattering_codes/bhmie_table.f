      PROGRAM BHMIE_TABLE

C	PROGRAM PARAMETERS
      	INTEGER MXNANG
      	PARAMETER(MXNANG=100000)

C	PROGRAM VARIABLES
      	INTEGER IREADEP,J,NAN,NANG,NANG0
      	REAL AJ,ANG,DANG,GSCA,PI,POL
       	REAL QABS,QBACK,QEXT,QSCA,RAD,REFMED
       	REAL S11,S12,S33,S34,WAVEL,X
	REAL REFREL_REAL, REFREL_IMAG
      	COMPLEX REFREL,CXEPS,S1(2*MXNANG-1),S2(2*MXNANG-1)

	CHARACTER BUFFER*80
	INTEGER NARGS,I

C***********************************************************************
C THIS PROGRAM CALCULATES THE MIE SCATTERING ABOUT A PARTICLE AND
C RETURNS THE SCATTERING EFFICIENCY ABOUT THE PARTICLE.  THE PROGRAM
C TAKES 6 COMMAND LINE INPUTS:
C
C	REFMED - SURROUNDING MEDIUM REFRACTIVE INDEX
C	REFREL_REAL - REAL PART OF PARTICLE REFRACTIVE INDEX
C	REFREL_IMAG - IMAGINARY PART OF THE PARTICLE REFRACTIVE INDEX
C	RAD - SPHERICAL PARTICLE RADIUS [ARBITRARY UNITS]
C	WAVEL - WAVELENGTH OF IMPINGING LIGHT [ARBITRARY UNITS]
C	NANG0 - NUMBER OF ANGLES FROM 0 TO 180 DEGREES INCLUSIVE
C
C THE PROGRAM OUTPUTS A TABLE OF VALUES WITH THE HEADINGS
C
C	theta
C	S11
C	POL
C	S33
C	S34
C
C WEHRE I THINK THESE ARE THE DIFFERENT POLARIZATIONS. THE OUTPUT TABLE
C MAY BE PRINTED TO THE COMMAND LINE OR TO A FILE USING THE STANDARD
C OUTPUT.  AN EXAMPLE CALLING THE CODE IS:
C
C ./bhmie_table 1.33 1.4 0.02 10 0.532 180 > mie_table.dat
C
C WHERE THE SIX NUMBERS ARE THE INPUT ARGUMENTS AND "mie_table.dat" IS
C THE DATA FILE WHERE THE DATA IS WRITTEN TO.  THIS CODE CAN BE COMPILED
C BY CREATING THE OBJECT
C
C	f77 -c -fPIC bhmie.f
C
C FROM THE ORIGINAL bhmie.f FILE.  THEN THIS CODE IS COMPILED BY
C
C	f77 -o bhmie_table bhmie.o bhmie_table.f
C
C ALTERNATIVELY THE CODE MAY BE COMPILED WITH "f95" OR "gfortran" USING
C IDENTICAL SYNTAX. FOR SOME REASON THE CODE MUST BE COMPILED WITH
C "f77" TO GET STDOUT TO WORK CORRECTLY WITH MATLAB. COMPILING WITH 
C "f77" PRODUCES SOME COMPILER WARNINGS, BUT THE CODE SEEMS TO STILL
C WORK CORRECTLY.
C
C AUTHORS: ROD LA FOY
C CREATED ON: 21 AUGUST 2013
C LAST MODIFIED ON: 23 AUGUST 2013
C NOTES: BASED UPON THE CODE CALLBHMIE.F AND BHMIE.F WRITTEN BY 
C B. T. DRAINE, PRINCETON UNIV. OBS.
C***********************************************************************

      	PI=4.E0*ATAN(1.E0)
      	OPEN(UNIT=7,FILE='bhmie_table.out',STATUS='UNKNOWN')

C	THIS IS THE REFRACTIVE INDEX OF THE SURROUNDING MEDIUM
	CALL GETARG(1, BUFFER)
	READ(BUFFER, *) REFMED

C	THIS IS THE REAL PART OF THE REFRACTIVE INDEX OF THE PARTICLE
        CALL GETARG(2, BUFFER)
        READ(BUFFER, *) REFREL_REAL

C	THIS IS THE IMAGINARY PART OF THE REFRACTIVE INDEX OF THE PARTICLE
	CALL GETARG(3, BUFFER)
        READ(BUFFER, *) REFREL_IMAG

C	THIS COMBINES THE REAL AND IMAGINARY PARTS OF THE PARTICLE REFRACTIVE INDEX
C 	REFREL=CMPLX(REFREL_REAL,REFREL_IMAG)
        REFREL = CMPLX(REFREL_REAL,REFREL_IMAG)/REFMED
C	THIS IS THE RADIUS OF THE SPHERICAL PARTICLE
        CALL GETARG(4, BUFFER)
        READ(BUFFER, *) RAD

C	THIS IS THE WAVELENGTH OF THE LIGHT HITTING THE PARTICLE
        CALL GETARG(5, BUFFER)
        READ(BUFFER, *) WAVEL

C	THIS IS THE NUMBER OF ANGLES TO CALCULATE BETWEEN 0 AND 180 DEGREES
	CALL GETARG(6, BUFFER)
       	READ(BUFFER, *) NANG0

      	IF(NANG0.GT.MXNANG)STOP'***Error: NANG > MXNANG'
      	NANG=NANG0
      	IF(NANG0.LT.2)NANG=2
      	X=2.E0*PI*RAD*REFMED/WAVEL
      	WRITE(7,6013)RAD,WAVEL,X
      	WRITE(*,6013)RAD,WAVEL,X

C**********
C NANG=number of angles between 0 and 90 degrees (incl. 0 and 90)
C Scattering matrix elements are calculated for 2*NANG-1 angles
C including 0, 90, and 180 degrees.
C**********
      	IF(NANG.GT.1)DANG=0.5E0*PI/FLOAT(NANG-1)
      	CALL BHMIE(X,REFREL,NANG,S1,S2,QEXT,QSCA,QBACK,GSCA)
      	QABS=QEXT-QSCA
      	WRITE(*,6065)QEXT,QSCA,QABS,GSCA,QBACK
      	WRITE(7,6065)QEXT,QSCA,QABS,GSCA,QBACK

C POL=degree of polarization (for incident upolarized light)
      	IF(NANG0.GT.1)THEN
        	NAN=2*NANG-1
        	WRITE(*,6017)
        	WRITE(7,6017)
        	DO 355 J=1,NAN
        	AJ=J
        	S11=0.5E0*CABS(S2(J))*CABS(S2(J))
        	S11=S11+0.5E0*CABS(S1(J))*CABS(S1(J))
        	S12=0.5E0*CABS(S2(J))*CABS(S2(J))
        	S12=S12-0.5E0*CABS(S1(J))*CABS(S1(J))
        	POL=-S12/S11
        	S33=REAL(S2(J)*CONJG(S1(J)))
        	S34=AIMAG(S2(J)*CONJG(S1(J)))
        	ANG=DANG*(AJ-1.E0)*180.E0/PI
        	WRITE(7,6075)ANG,S11,POL,S33,S34
        	WRITE(*,6075)ANG,S11,POL,S33,S34
  355   	CONTINUE
      	ENDIF
 6013 	FORMAT(' radius=',1PE11.4,' lambda=',E11.4,' x=',E11.4)
 6017 	FORMAT(2X,'theta',7X,'S11',11X,'POL',11X,'S33',11X,'S34')
 6065 	FORMAT(/,'Qext=',1PE11.4,' Qsca=',E11.4,' Qabs=',E11.4,
     &' <cos>=',E11.4,/,17X,'Qbk =',E11.4)
 6075 	FORMAT(1X,F6.2,2X,1PE12.5,2X,E12.5,2X,E12.5,2X,E12.5)
      	STOP
      	END
